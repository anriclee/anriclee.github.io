[{"content":"This page explains the new features and changes of PaperModX comparing to the original PaperMod.\nTable of Contents (ToC) floating on the side By adding config:\nparams:TocSide:\u0026#39;left\u0026#39;# or \u0026#39;right\u0026#39;ToC will float on the left/right side of the page. You can take a look at how 'right' feels like in Installation | Update.\nThe ToC box is responsive, it only shows on the side when minimum screen size is 1440px.\nThis feature is enabled on this site.\nInstantClick integration By adding config:\nparams:EnableInstantClick:trueInstantClick will be enabled, making navigation behaves like Single Page Application.\nNote that /search pages are omitted from InstantClick to prevent conflicts from search\u0026rsquo;s JavaScript, this may be changed in the future after refactoring those scripts.\nAnother thing to notice is smooth scrolling will be disabled if InstantClick is enabled, because they both listen click event on every \u0026lt;a\u0026gt; tags. IMO smooth scrolling is not very useful so it has to give way to InstantCllick.\nThis feature is enabled on this site.\nGive links an accent color. Though PaperModX is designed to be minimal, accent color is still essential. It\u0026rsquo;s a good way to show personality and make your site feels more delightful.\nThe default color is a purple vibe, you can customize the colors of link, link underline and their hover variants by override the following css variables in assets/css/extended/custom.css of your site.\n:root { --link-color: var(--primary); --link-hover-color: #573eaa; --link-underline-shadow: 0 1px 0 var(--link-color); --link-hover-underline-color: #573eaa; --link-hover-underline-shadow: 0 2px 0 var(--link-hover-underline-color); } Customize pagniator size In section pages, if you want the paginator size be different from the global config, you can add paginate in the frontmatter to customize.\n---paginate:10---Menus external link You can add external: true to a menu item\u0026rsquo;s params to mark it as an external link, this will add a small icon to the end, and make the link open in new tab when clicked.\nmenu:main:- name:\u0026#34;@Author\u0026#34;url:\u0026#34;https://reorx.com\u0026#34;params:external:trueHighlight code with Chroma, no bullshit PaperMod uses highlight.js to highlight code blocks. In PaperModX, we use Chroma which is the recommended way in Hugo\u0026rsquo;s official docs, thus changing theme is easily supported.\nBy default the themes are github for light and dracula for dark, you can change it by adding chroma-light.css and chroma-dark.css in site\u0026rsquo;s assets/css/lib directory.\nSocial icons from Simple Icons Add social icons with -simple suffix from Simple Icons.\nAvailable icons:\n github-simple rss-simple telegram-simple twitter-simple pinboard-simple  The icons are moved from layouts/partials/svg.html to data/svg.toml, makes it easier to maintain, it\u0026rsquo;s now possible to have an index page to show all the icons, check it out at: Icons Preview\nOpinionated UI enhancements  Distinguish home page width and post page width, post page is wider (800px) for better readability, you can change it by --post-width in theme-vars.css. Menu links are always bold, this feels more consistent when clicking around. Active links have deeper color.  ","permalink":"https://anriclee.github.io/docs/papermodx-new-features/","summary":"This page explains the new features and changes of PaperModX comparing to the original PaperMod.","title":"PaperModX New Features"},{"content":"","permalink":"https://anriclee.github.io/docs/icons_preview/","summary":"Index of all icons in PaperModeX","title":"Icons Preview"},{"content":"什么是 Bot Bot 的概念在官网的介绍稍微有点繁琐和复杂，详细可以了解官网介绍，\n简单来说，bot 就是你在 telegram 中的一个特殊账号，你申请了 bot，这个 bot 就是你的代理人，你发号施令到 bot，bot 会响应你的指令，仅此而已。\n申请 bot 需要找 BotFather（名字起的很形象），具体过程官网说的比较详细，此处不赘言。但是需要强调的一点是，bot 仅仅是你的代理人而已，真正执行你指令的是你自己部署的脚本，如果你不部署自己的脚本，在 bot 中输入指令，是没有任何响应的。\n你、bot和你部署的脚本关系如下:\n\n脚本 上面说过了，bot 只是你在 telegram 的一个代理，真正干活的是你的脚本。既然自己写脚本，就会存在两个问题：接受指令、做出响应。\n接受指令 对于如何让脚本接受指令，官方提供了两种思路：推模式 、拉模式。\n 拉模式  这种模式，官方不太推荐。简单而言，就是自己部署一个脚本，不断执行 get 请求，获取自己 bot 的更新信息，就好比一个仆人一直在问你：\n有没有需要我做的？\n有没有需要我做的？\n有没有需要我做的？\n询问的方式也比较简单：\ncurl -X GET https://api.telegram.org/bot[token]/getUpdates 这里的 token，就是上面申请 bot 完毕后，得到的 token， 出于脱敏，我使用 [token] 代替，下同。这种方法比较笨拙，轮询的频次太高和太低都不行，而且你在 bot 中发布一条指令后，可能并不能够马上得到执行，会有延迟。\n这种方式的好处是：可以让 bot 启在本地，不需要部署到服务器上，因为 telegram 不知道你的存在，他也不需要知道你的存在。\n 推模式  这种方式是官方比较推荐的一种方式，这种类似事件驱动的原理。只有有任务了，才会通知脚本去做。但前提是：在向 bot 发号施令前，需要在 bot 中注册一个 callback url。\nbot 在接受你的指令后，会调用此 url，通知你的脚本，让他执行任务。\n注册方式也比较简单：\ncurl -X POST https://api.telegram.org/bot[token]/setWebhook -H \u0026quot;Content-type: application/json\u0026quot; -d '{\u0026quot;url\u0026quot;: \u0026quot;[YOUR_URL]\u0026quot;} 使用这种方式，会比上一种稍微麻烦一点，需要你部署的服务能够支持 https（这也是为了安全起见）。\n响应指令 收到 telegram 的指令后，如何发送消息到 telegram 频道呢？笔者对 golang 较为熟悉，所以采用了 golang 的方式进行响应。\nfunc Handler(w http.ResponseWriter, r *http.Request) { err := r.ParseForm() if err != nil { log.Printf(\u0026quot;parse form values failed:%+v\u0026quot;, err) } body, _ := r.GetBody() bytes, _ := io.ReadAll(body) msg := string(bytes) // ...... 读取到 query 参数和 body 后，可以进行各种逻辑操作 fmt.Fprintf(w, \u0026quot;result:\u0026quot;+content) } 上面的代码使用到了一个开源库，他替我们封装好了api（当然也可以自己按照 telegram 的协议组装消息）。\n部署脚本 现在有了 bot，也有了响应 bot 的脚本逻辑，只剩部署脚本到服务器了。我们当然不能仅仅为了响应一条指令租一个个人服务器吧（土豪除外）。\n笔者用的是 Vercel 平台，使用 Vercel 部署 ServeLess 的 Function 还是比较方便的，部署过程，跟随步骤指导一步一步来比较容易。\nhttps://vercel.com/\n部署好之后，可以先在本地执行下 curl 请求，测试没问题后，将该 url 设置为 telegram bot 的 callback 函数即可。\n使用 学会一个东西的主要方法，就是疯狂的使用它。本人出入办公单位，都需要扫门禁二维码，不胜其烦，需要关注微信小程序，然后点击门禁二维码，全程既慢且麻烦。\n在一次偶然抓包之后，发现获取二维码的请求是一个简单的 http post 请求，且密码为明文。\n这次体验到了 Serveless 的方便，出于 bot 练习之故，可以将该请求封装到 script 中，部署到 vercel 平台上，在 telegram 申请一个门禁机器人，打开之后，发送指令到 script，script 发起 post 调用，获取到结果后，渲染为二维码即可。\n渲染二维码使用到的开源包\n请求安全性校验 为了安全起见，有人恶意调用你的脚本 url，可以将自己脚本服务的 api 的前缀设置为 token（token 没有人知道，所以也无法知道的 api）。vercel 平台支持通过 vercel.json 进行请求的重定向，可以通过正则表达式，将 randomwdocd23123123[token 示例]/api 转发到 /api。\n{ \u0026quot;routes\u0026quot;:[ { \u0026quot;src\u0026quot;:\u0026quot;/random/(?\u0026lt;id\u0026gt;[^/]*)/api/hello/\u0026quot;, \u0026quot;dest\u0026quot;:\u0026quot;/api/hello.go?id=$id\u0026quot; } ] } 这是利用了官方提供的重定向的特性，详细可以参考官网\nreference 1.Build a serverless Telegram chatbot deployed using Vercel\n","permalink":"https://anriclee.github.io/posts/telegram_bot/","summary":"什么是 Bot Bot 的概念在官网的介绍稍微有点繁琐和复杂，详细可以了解官网介绍，\n简单来说，bot 就是你在 telegram 中的一个特殊账号，你申请了 bot，这个 bot 就是你的代理人，你发号施令到 bot，bot 会响应你的指令，仅此而已。\n申请 bot 需要找 BotFather（名字起的很形象），具体过程官网说的比较详细，此处不赘言。但是需要强调的一点是，bot 仅仅是你的代理人而已，真正执行你指令的是你自己部署的脚本，如果你不部署自己的脚本，在 bot 中输入指令，是没有任何响应的。\n你、bot和你部署的脚本关系如下:\n\n脚本 上面说过了，bot 只是你在 telegram 的一个代理，真正干活的是你的脚本。既然自己写脚本，就会存在两个问题：接受指令、做出响应。\n接受指令 对于如何让脚本接受指令，官方提供了两种思路：推模式 、拉模式。\n 拉模式  这种模式，官方不太推荐。简单而言，就是自己部署一个脚本，不断执行 get 请求，获取自己 bot 的更新信息，就好比一个仆人一直在问你：\n有没有需要我做的？\n有没有需要我做的？\n有没有需要我做的？\n询问的方式也比较简单：\ncurl -X GET https://api.telegram.org/bot[token]/getUpdates 这里的 token，就是上面申请 bot 完毕后，得到的 token， 出于脱敏，我使用 [token] 代替，下同。这种方法比较笨拙，轮询的频次太高和太低都不行，而且你在 bot 中发布一条指令后，可能并不能够马上得到执行，会有延迟。\n这种方式的好处是：可以让 bot 启在本地，不需要部署到服务器上，因为 telegram 不知道你的存在，他也不需要知道你的存在。\n 推模式  这种方式是官方比较推荐的一种方式，这种类似事件驱动的原理。只有有任务了，才会通知脚本去做。但前提是：在向 bot 发号施令前，需要在 bot 中注册一个 callback url。","title":"Telegram_bot"},{"content":"Social Icons Go to Icons Preview to see a complete list of icons\nUsage :\nsocialIcons: - name: \u0026quot;kofi\u0026quot; url: \u0026quot;https://kofi.com\u0026quot; - name: \u0026quot;twitter\u0026quot; url: \u0026quot;https://twitter.com\u0026quot;  Share Icons    No. Platform     1 twitter (also generates hash tags from tags linked with post)   2 linkedin   3 reddit   4 facebook   5 whatsapp   6 telegram    Usage:\nparams:ShowShareButtons:true","permalink":"https://anriclee.github.io/docs/icons/","summary":"Explain how to use icons in PaperModX","title":"Icons"},{"content":"Intro  We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary.   Guide Follow Quick Start guide to setup hugo and create a new site.\n Note: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\n Make sure you install latest version of hugo(\u0026gt;=0.83.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\ngit clone https://github.com/reorx/hugo-PaperModX themes/PaperModX --depth=1 Note: You may use  --branch v5.0 to end of above command if you want to stick to specific release.\n Updating theme :\ncd themes/PaperModX git pull  Method 2 You can use as submodule with\ngit submodule add https://github.com/reorx/hugo-PaperModX.git themes/PaperModX --depth=1 git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Note: You may use  --branch v5.0 to end of above command if you want to stick to specific release.\n Updating theme :\ngit submodule update --remote --merge  Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\n Master Branch (Latest) v5.0 v4.0 v3.0 v2.0 v1.0  Finally \u0026hellip; Add in config.yml:\ntheme:\u0026#34;PaperModX\u0026#34;Method 4   Install Go programming language in your operating system.\n  Intialize your own hugo mod\n  hugo mod init YOUR_OWN_GIT_REPOSITORY  Add PaperModX in your config.yml file  module: imports: - path: github.com/reorx/hugo-PaperModX  Update theme  hugo mod get -u  Quick Links   Papermod - Features   Papermod - FAQs   Papermod - Variables   Papermod - Icons   ChangeLog    Sample config.yml  Example Site Structure is present here: exampleSite\n Use appropriately\nbaseURL:\u0026#34;https://examplesite.com/\u0026#34;title:ExampleSitepaginate:5theme:PaperModXenableRobotsTXT:truebuildDrafts:falsebuildFuture:falsebuildExpired:falsepygmentsUseClasses:truegoogleAnalytics:UA-123-45minify:disableXML:trueminifyOutput:trueparams:env:production# to enable google analytics, opengraph, twitter-cards and schema.title:ExampleSitedescription:\u0026#34;ExampleSite description\u0026#34;keywords:[Blog, Portfolio, PaperModX]author:Me# author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authorsimages:[\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;]DateFormat:\u0026#34;January 2, 2006\u0026#34;defaultTheme:auto# dark, lightdisableThemeToggle:falseShowReadingTime:trueShowShareButtons:trueShowPostNavLinks:trueShowBreadCrumbs:trueShowCodeCopyButtons:falsedisableSpecial1stPost:falsedisableScrollToTop:falsecomments:falsehidemeta:falsehideSummary:falseshowtoc:falsetocopen:falseassets:# disableFingerprinting: truefavicon:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;favicon16x16:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;favicon32x32:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;apple_touch_icon:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;safari_pinned_tab:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;label:text:\u0026#34;Home\u0026#34;icon:/apple-touch-icon.pngiconHeight:35# profile-modeprofileMode:enabled:false# needs to be explicitly settitle:ExampleSitesubtitle:\u0026#34;This is subtitle\u0026#34;imageUrl:\u0026#34;\u0026lt;img location\u0026gt;\u0026#34;imageWidth:120imageHeight:120imageTitle:my imagebuttons:- name:Postsurl:posts- name:Tagsurl:tags# home-info modehomeInfoParams:Title:\u0026#34;Hi there \\U0001F44B\u0026#34;Content:Welcome to my blogsocialIcons:- name:twitterurl:\u0026#34;https://twitter.com/\u0026#34;- name:stackoverflowurl:\u0026#34;https://stackoverflow.com\u0026#34;- name:githuburl:\u0026#34;https://github.com/\u0026#34;analytics:google:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;bing:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;yandex:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;cover:hidden:true# hide everywhere but not in structured datahiddenInList:true# hide on list pages and homehiddenInSingle:true# hide on single pageeditPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link# for search# https://fusejs.io/api/options.htmlfuseOpts:isCaseSensitive:falseshouldSort:truelocation:0distance:1000threshold:0.4minMatchCharLength:0keys:[\u0026#34;title\u0026#34;,\u0026#34;permalink\u0026#34;,\u0026#34;summary\u0026#34;,\u0026#34;content\u0026#34;]menu:main:- identifier:categoriesname:categoriesurl:/categories/weight:10- identifier:tagsname:tagsurl:/tags/weight:20- identifier:examplename:example.orgurl:https://example.orgweight:30# Read: https://github.com/reorx/hugo-PaperModX/wiki/FAQs#using-hugos-syntax-highlighter-chroma# pygmentsUseClasses: true# markup:# highlight:# # anchorLineNos: true# codeFences: true# guessSyntax: true# lineNos: true# style: monokai Sample Page.md ---title:\u0026#34;My 1st post\u0026#34;date:2020-09-15T11:30:03+00:00# weight: 1# aliases: [\u0026#34;/first\u0026#34;]tags:[\u0026#34;first\u0026#34;]author:\u0026#34;Me\u0026#34;# author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authorsshowToc:trueTocOpen:falsedraft:falsehidemeta:falsecomments:falsedescription:\u0026#34;Desc Text.\u0026#34;canonicalURL:\u0026#34;https://canonical.url/to/page\u0026#34;disableShare:falsehideSummary:falsesearchHidden:trueShowReadingTime:trueShowBreadCrumbs:trueShowPostNavLinks:truecover:image:\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;# image path/urlalt:\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;# alt textcaption:\u0026#34;\u0026lt;text\u0026gt;\u0026#34;# display caption under coverrelative:false# when using page bundles set this to truehidden:true# only hide on current single pageeditPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link---You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt;  ","permalink":"https://anriclee.github.io/docs/installation/","summary":"Read Install and Update instructions here","title":"Installation | Update"},{"content":" source: https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-features/\n Intro   We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\n  You can find any YML to TOML converters if necessary.\n   Assets (js/css) The following is enabled by default\n minification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/integrity check.   Default Theme light/dark/auto params:# defaultTheme: light# defaultTheme: darkdefaultTheme:auto# to switch between dark or light according to browser theme  Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\ndisableThemeToggle:trueYou can refer following table for better understanding\u0026hellip;\n   defaultTheme disableThemeToggle checks local storage? checks system theme? Info     auto true No Yes only system theme    false Yes (if not-\u0026gt;2) Yes (2) switch present   dark true No No force dark only    false Yes No switch present   light true No No force light only    false Yes No switch present     Archives Layout Create a page with archive.md in content directory with following content\n. ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ├── static/ └── themes/ └── PaperModX/ and add the following to it\n---title:\u0026#34;Archive\u0026#34;layout:\u0026#34;archives\u0026#34;url:\u0026#34;/archives/\u0026#34;summary:archives---Note: Archives Layout does not support Multilingual Month Translations.\n Regular Mode (default-mode)  Home-Info Mode Use 1st entry as some Information\nadd following to config file\nparams:homeInfoParams:Title:Hi there waveContent:Can be Info, links, about...socialIcons:# optional- name:\u0026#34;\u0026lt;platform\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link\u0026gt;\u0026#34;- name:\u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Profile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\nparams:profileMode:enabled:truetitle:\u0026#34;\u0026lt;Title\u0026gt;\u0026#34;# optional default will be site titlesubtitle:\u0026#34;This is subtitle\u0026#34;imageUrl:\u0026#34;\u0026lt;image link\u0026gt;\u0026#34;# optionalimageTitle:\u0026#34;\u0026lt;title of image as alt\u0026gt;\u0026#34;# optionalimageWidth:120# custom sizeimageHeight:120# custom sizebuttons:- name:Archiveurl:\u0026#34;/archive\u0026#34;- name:Githuburl:\u0026#34;https://github.com/\u0026#34;socialIcons:# optional- name:\u0026#34;\u0026lt;platform\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link\u0026gt;\u0026#34;- name:\u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Search Page PaperModX uses Fuse.js Basic for seach functionality\nAdd the following to site config, config.yml\noutputs:home:- HTML- RSS- JSON# is necessaryCreate a page with search.md in content directory with following content\n---title:\u0026#34;Search\u0026#34;# in any language you wantlayout:\u0026#34;search\u0026#34;# is necessary# url: \u0026#34;/archive\u0026#34;# description: \u0026#34;Description for Search\u0026#34;summary:\u0026#34;search\u0026#34;---To hide a particular page from being searched, add it in post\u0026rsquo;s fron\u0026rsquo;t matter\n---searchHidden:true Search Page also has Key bindings:\n Arrow keys to move up/down the list Enter key (return) or Right Arrow key to Go to highlighted page Escape key to clear searchbox and results   For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\nparams:fuseOpts:isCaseSensitive:falseshouldSort:truelocation:0distance:1000threshold:0.4minMatchCharLength:0keys:[\u0026#34;title\u0026#34;,\u0026#34;permalink\u0026#34;,\u0026#34;summary\u0026#34;,\u0026#34;content\u0026#34;] Draft Page indication adds [draft] mark to indicate draft pages.\n Post Cover Image In post\u0026rsquo;s page-variables add :\ncover:image:\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;# can also paste direct link from external site# ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.pngalt:\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;caption:\u0026#34;\u0026lt;text\u0026gt;\u0026#34;relative:false# To use relative path for cover image, used in hugo Page-bundlesWhen you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\nparams:cover:responsiveImages:falseTo enable hyperlinks to the full image size on post pages, use\nparams:cover:linkFullImages:true Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\nparams:ShowShareButtons:true Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\nParams:ShowReadingTime:true Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\nShowToc:trueTo keep Toc Open by default on a post add following to page-variables:\nTocOpen:true BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\nparams:ShowBreadCrumbs:trueCan be diabled for particular page\u0026rsquo;s front-matter\n---ShowBreadCrumbs:false--- Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\nParams:editPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit linkCan be modified for individual pages\n---editPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link---The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\n   Parameter Required Default Value     editPost.URL true -   editPost.appendFilePath false false   editPost.Text false \u0026ldquo;Edit\u0026rdquo;    Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\n Other Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\nparams:ShowPostNavLinks:true Multiple Authors To Use multiple authors for a post, in post-variables:\n---author:[\u0026#34;Me\u0026#34;,\u0026#34;You\u0026#34;]---To use Multiple Authors Site-wide, in config.yml:\nparams:author:[\u0026#34;Me\u0026#34;,\u0026#34;You\u0026#34;] Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\nparams:comments:trueread more about this hugo-comments\n AccessKeys c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu What\u0026rsquo;s AccessKeys ?\n Enhanced SEO Enabled only when env: production\n Rich Results/Snippets Support  Twitter Cards Support  The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images:- image_01.png- image_02.png Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name.  OpenGraph support  The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images:- image_01.png- image_02.png Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. videos:- filename01.mov- filename02.avi   Multilingual Support  Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) Displays a Scroll-to-Top button in right-bottom corner Google Analytics integration Syntax highlighting RSS feeds ","permalink":"https://anriclee.github.io/docs/features/","summary":"Learn About All Features in original PaperMod","title":"PaperMod Features"},{"content":"最近在用 hugo 构建了个人博客之后，便有兴趣想研究下其源码。但是源码的体量之大，逻辑之复杂出乎我的意料。不过好在源码的结构比较清晰，有许多地方值得借鉴。 s 比如它的程序入口，非常简洁：\nfunc main() { resp := commands.Execute(os.Args[1:]) if resp.Err != nil { if resp.IsUserError() { resp.Cmd.Println(\u0026#34;\u0026#34;) resp.Cmd.Println(resp.Cmd.UsageString()) } os.Exit(-1) } } 它将所有根据命令行参数传入的指令统一封装到 commands 包中。后面有新命令需求时，只需要新建一个 cmd 文件即可。\n它是怎么做到的呢？\n简而言之，就是在程序入口处将所有的命令类汇总，然后再根据输入参数args，决定要执行哪个cmd，看似增加了代码的复杂度，但是对于后续命令的扩展显得非常方便。\nhugo 中使用了 builder 模式将所有的命令汇总，我这里简单起见，只初始化了一个数组，主要是体会其开闭原则的思想即可。\n Talk is cheap, show me the code\n 借鉴它的思路，我写了一个简化版，可以参看，代码链接.\n","permalink":"https://anriclee.github.io/posts/hugo_cmd_pattern/","summary":"最近在用 hugo 构建了个人博客之后，便有兴趣想研究下其源码。但是源码的体量之大，逻辑之复杂出乎我的意料。不过好在源码的结构比较清晰，有许多地方值得借鉴。 s 比如它的程序入口，非常简洁：\nfunc main() { resp := commands.Execute(os.Args[1:]) if resp.Err != nil { if resp.IsUserError() { resp.Cmd.Println(\u0026#34;\u0026#34;) resp.Cmd.Println(resp.Cmd.UsageString()) } os.Exit(-1) } } 它将所有根据命令行参数传入的指令统一封装到 commands 包中。后面有新命令需求时，只需要新建一个 cmd 文件即可。\n它是怎么做到的呢？\n简而言之，就是在程序入口处将所有的命令类汇总，然后再根据输入参数args，决定要执行哪个cmd，看似增加了代码的复杂度，但是对于后续命令的扩展显得非常方便。\nhugo 中使用了 builder 模式将所有的命令汇总，我这里简单起见，只初始化了一个数组，主要是体会其开闭原则的思想即可。\n Talk is cheap, show me the code\n 借鉴它的思路，我写了一个简化版，可以参看，代码链接.","title":"Hugo 中的命令行模式"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Inline Code This is Inline Code\nOnly pre  This is pre text  Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://anriclee.github.io/posts/markdown-syntax/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","permalink":"https://anriclee.github.io/posts/rich-content/","summary":"\u003cp\u003eHugo ships with several \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes\"\u003eBuilt-in Shortcodes\u003c/a\u003e for rich content, along with a \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\"\u003ePrivacy Config\u003c/a\u003e and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\u003c/p\u003e","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates (extend_head.html) like so: refer ISSUE #236  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\n  Examples  Inline math: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\) Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"https://anriclee.github.io/docs/math-typesetting/","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }  .emojify { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; font-size: 2rem; vertical-align: middle; } @media screen and (max-width:650px) { .nowrap { display: block; margin: 25px 0; } } ","permalink":"https://anriclee.github.io/docs/emoji-support/","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","title":"Emoji Support"}]