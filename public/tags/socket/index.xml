<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Socket on ReadByWord</title>
    <link>http://localhost:1313/tags/socket/</link>
    <description>Recent content in Socket on ReadByWord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Jul 2022 17:20:28 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/socket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Socket 创建 TCP 服务器</title>
      <link>http://localhost:1313/posts/socket/</link>
      <pubDate>Sun, 17 Jul 2022 17:20:28 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/socket/</guid>
      <description>&lt;p&gt;bind
listen&lt;/p&gt;
&lt;p&gt;accept&lt;/p&gt;
&lt;p&gt;accept 的方法签名如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;restrict&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;socklen_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;restrict&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addrlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;The accept() system call is used with &lt;strong&gt;connection-based&lt;/strong&gt; socket types (SOCK_STREAM, SOCK_SEQPACKET).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;SOCK_STREAM 代表 TCP 连接方式
SOCK_SEQPACKET 代表 UDP 连接方式&lt;/p&gt;
&lt;p&gt;签名中的 sockfd 代表监听的 socket 连接&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It extracts the &lt;strong&gt;first connection request&lt;/strong&gt; on the queue of pending connections for the listening socket, &lt;code&gt;sockfd&lt;/code&gt;, creates a &lt;strong&gt;new connected socket&lt;/strong&gt;, and returns a &lt;strong&gt;new file descriptor&lt;/strong&gt; referring to that socket.  The newly created socket is not in the listening state.  The original socket sockfd is unaffected by this call.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>bind
listen</p>
<p>accept</p>
<p>accept 的方法签名如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sys/socket.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="nf">accept</span><span class="p">(</span><span class="kt">int</span> <span class="n">sockfd</span><span class="p">,</span> <span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="kr">restrict</span> <span class="n">addr</span><span class="p">,</span> <span class="kt">socklen_t</span> <span class="o">*</span><span class="kr">restrict</span> <span class="n">addrlen</span><span class="p">);</span>
</span></span></code></pre></div><blockquote>
<p>The accept() system call is used with <strong>connection-based</strong> socket types (SOCK_STREAM, SOCK_SEQPACKET).</p></blockquote>
<p>SOCK_STREAM 代表 TCP 连接方式
SOCK_SEQPACKET 代表 UDP 连接方式</p>
<p>签名中的 sockfd 代表监听的 socket 连接</p>
<blockquote>
<p>It extracts the <strong>first connection request</strong> on the queue of pending connections for the listening socket, <code>sockfd</code>, creates a <strong>new connected socket</strong>, and returns a <strong>new file descriptor</strong> referring to that socket.  The newly created socket is not in the listening state.  The original socket sockfd is unaffected by this call.</p></blockquote>
<p>这段话给出的信息较多：</p>
<ol>
<li>sockfd 是所监听的 <code>socket</code> 的文件描述符；</li>
<li>不知道有多少 client 向该 <code>socket</code> 发起请求，但是这些请求都会排到该 <code>socket</code> 的请求队列中，队列的长度最长可以有多长？？？；</li>
<li>accept 方法每次仅从请求队列中取队头进行处理；</li>
<li>处理请求时，会创建一个新的 <code>socket</code>，并返回一个指向该 <code>socket</code> 的文件描述符；</li>
<li>新创建的这个 <code>socket</code> 不在 <code>listen</code> 状态</li>
<li>此次 <code>accept</code> 调用，不影响原来的 <code>socket</code> 的状态</li>
</ol>
<h1 id="reference">Reference</h1>
<ol>
<li><a href="https://www.tutorialspoint.com/unix_sockets/socket_server_example.htm">https://www.tutorialspoint.com/unix_sockets/socket_server_example.htm</a></li>
<li><a href="https://man7.org/linux/man-pages/man2/accept.2.html">https://man7.org/linux/man-pages/man2/accept.2.html</a></li>
<li><a href="https://www.geeksforgeeks.org/tcp-server-client-implementation-in-c/">https://www.geeksforgeeks.org/tcp-server-client-implementation-in-c/</a></li>
<li><a href="https://devarea.com/linux-io-multiplexing-select-vs-poll-vs-epoll/#.YtLNMpdBxQJ">https://devarea.com/linux-io-multiplexing-select-vs-poll-vs-epoll/#.YtLNMpdBxQJ</a></li>
<li><a href="https://stevens.netmeister.org/631/09-io-multiplexing.pdf">https://stevens.netmeister.org/631/09-io-multiplexing.pdf</a></li>
</ol>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
