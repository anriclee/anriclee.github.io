<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>PostgreSQL - tag - ReadTinyWords</title><link>https://anriclee.github.io/tags/postgresql/</link><description>PostgreSQL - tag - ReadTinyWords</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 08 Apr 2025 21:43:07 +0800</lastBuildDate><atom:link href="https://anriclee.github.io/tags/postgresql/" rel="self" type="application/rss+xml"/><item><title>My New Post</title><link>https://anriclee.github.io/blog/my-new-post/</link><pubDate>Tue, 08 Apr 2025 21:43:07 +0800</pubDate><author>anriclee</author><guid>https://anriclee.github.io/blog/my-new-post/</guid><description>&lt;p>This is a page about »My New Post«.&lt;/p></description></item><item><title>基于 PostgreSQL 的群聊搜索实践</title><link>https://anriclee.github.io/posts/pg/</link><pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate><author>anriclee</author><guid>https://anriclee.github.io/posts/pg/</guid><description><![CDATA[<h2 id="背景">背景</h2>
<p>2021年年初，探探上线了群聊功能，并且支持按照群名进行模糊搜索。</p>
<p>对于复杂场景的搜索，业界一般使用非常流行的 ElasticSearch。由于我们的群数据较少，截止到目前还没有达到千万级的量级，且搜索场景比较简单，而 PostgreSQL 对全文搜索又支持得比较好，所以选择了 PostgreSQL 来实现群搜索需求。
在使用 PostgreSQL 做群搜索的过程中，也经历了由简单到复杂的迭代过程，中间也踩了不少坑。 下面的几个例子说明了方案的演进过程和我们的优化思路，希望能够对大家有所帮助。</p>
<h2 id="like-模糊查询">LIKE 模糊查询</h2>
<p>提到模糊搜索，最简单的办法就是对搜索列进行 like 匹配： 在输入词的前后加上 <code>%</code> 即可,如下所示:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title=""><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>SELECT * FROM groups WHERE name LIKE &#39;%探探%&#39;;</code></pre></div>
<p>这种方案可行是可行了，但是实现过于简单粗暴。对此方案进行测试：</p>
<p>建一张简单的表进行测试，表结构如下：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title=""><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>lixuehan=# \d groups;
                                   Table &#34;public.groups&#34;
 Column |         Type          | Collation | Nullable |              Default
--------+-----------------------+-----------+----------+------------------------------------
 id     | bigint                |           | not null | nextval(&#39;groups_id_seq&#39;::regclass)
 name   | character varying(50) |           |          |
Indexes:
    &#34;groups_pkey&#34; PRIMARY KEY, btree (id)</code></pre></div>
<p>表中只有两列：主键 <code>id</code> 以及群名 <code>name</code>。</p>]]></description></item></channel></rss>